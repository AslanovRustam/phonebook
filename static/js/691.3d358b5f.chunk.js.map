{"version":3,"file":"static/js/691.3d358b5f.chunk.js","mappings":"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","sources":["webpack://phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","redux/contacts/selectors.js","webpack://phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://phonebook/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.jsx","webpack://phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx","webpack://phonebook/./src/pages/s.module.css?2d48"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__edP3o\",\"text\":\"Contact_text__XEekE\",\"button\":\"Contact_button__G3qkQ\",\"phone\":\"Contact_phone__LtbEN\"};","import { useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/operations\";\r\nimport phone from \"../../images/telephone.png\";\r\nimport css from \"./Contact.module.css\";\r\n\r\nexport const Contact = ({ id, name, number }) => {\r\n  const dispatch = useDispatch();\r\n  const handleDelete = async () => {\r\n    try {\r\n      await dispatch(deleteContact(id));\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <p className={css.text}>{name} </p>\r\n      <span>- </span> <img className={css.phone} src={phone} alt=\"phone\" />\r\n      {number}\r\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const selectLoading = state => state.contacts.loading;\r\n\r\nexport const selectFilter = state => state.contacts.filter;\r\n\r\nexport const selectAllContacts = state => state.contacts.items;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__skyO1\"};","import { useSelector } from \"react-redux\";\r\nimport { Contact } from \"../Contact/Contact\";\r\nimport { selectAllContacts } from \"../../redux/contacts/selectors\";\r\nimport css from \"./ContactList.module.css\";\r\n\r\nexport const ContactList = ({ filter }) => {\r\n  const contacts = useSelector(selectAllContacts);\r\n\r\n  const contactsWithFilter = () => {\r\n    const filteredContacts = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n    return filteredContacts;\r\n  };\r\n\r\n  return (\r\n    <ul className={css.list}>\r\n      {contactsWithFilter().map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <Contact id={id} name={name} number={number} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__jm5NF\",\"input\":\"ContactEditor_input__+ThGd\",\"label\":\"ContactEditor_label__a4BT4\",\"button\":\"ContactEditor_button__ek833\"};","import { useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/operations\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAllContacts } from \"../../redux/contacts/selectors\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport css from \"./ContactEditor.module.css\";\r\n\r\nexport const ContactEditor = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectAllContacts);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n    if (name === \"\" || number === \"\") {\r\n      toast.error(\"name or number cannot be empty. Enter some text!\");\r\n      return;\r\n    }\r\n    if (\r\n      contacts.some(\r\n        (value) => value.name.toLocaleLowerCase() === name.toLocaleLowerCase()\r\n      )\r\n    ) {\r\n      toast.error(`Name -${name}- is alredy in contacts`);\r\n      return;\r\n    }\r\n    dispatch(addContact({ name, number }));\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form className={css.form} onSubmit={handleSubmit}>\r\n      <label className={css.label}>\r\n        Name: <input name=\"name\" className={css.input} />\r\n      </label>\r\n      <label className={css.label}>\r\n        Number: <input name=\"number\" type=\"tel\" className={css.input} />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={css.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__fUB5j\"};","// import { useState } from 'react';\r\nimport css from \"./Filter.module.css\";\r\n\r\nexport const Filter = ({ filter, onChangeInput }) => {\r\n  return (\r\n    <>\r\n      <label>\r\n        <hr />\r\n        Find contacts - &nbsp;\r\n        <input\r\n          className={css.input}\r\n          onChange={onChangeInput}\r\n          value={filter}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n        />\r\n      </label>\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ContactList } from \"../components/ContactList/ContactList\";\r\nimport { ContactEditor } from \"../components/ContactEditor/ContactEditor\";\r\nimport { Filter } from \"../components/Filter/Filter\";\r\nimport { fetchContacts } from \"../redux/contacts/operations\";\r\nimport { selectLoading } from \"../redux/contacts/selectors\";\r\nimport s from \"./s.module.css\";\r\n\r\nexport default function Contacts() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const onChangeInput = (evt) => {\r\n    setFilter(evt.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <section className={s.section}>\r\n      <title>Your Contacts</title>\r\n      <ContactEditor />\r\n      <Filter filter={filter} onChangeInput={onChangeInput} />\r\n      <div>{isLoading && \"Request in progress...\"}</div>\r\n      <ContactList filter={filter} />\r\n    </section>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"s_container__BTpsF\",\"phone\":\"s_phone__DlJGH\",\"animatePhoneRing\":\"s_animatePhoneRing__olShl\",\"title\":\"s_title__NcFf-\",\"animateText\":\"s_animateText__lEYWM\",\"section\":\"s_section__LWCsC\"};"],"names":["Contact","_ref","id","name","number","dispatch","useDispatch","handleDelete","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","deleteContact","t0","stop","apply","arguments","_jsxs","className","css","children","_jsx","src","phone","alt","type","onClick","selectLoading","state","contacts","loading","selectAllContacts","items","ContactList","filter","useSelector","contact","toLowerCase","includes","map","ContactEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","some","toLocaleLowerCase","toast","concat","addContact","reset","Filter","onChangeInput","_Fragment","onChange","Contacts","isLoading","useEffect","fetchContacts","_useState","useState","_useState2","_slicedToArray","setFilter","s","evt"],"sourceRoot":""}